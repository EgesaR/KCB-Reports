// Example action: Open report in a new tab
        window.open(`/reports/${id}`, "_blank");

import { useState, useEffect } from "react";
import { useMatches } from "@remix-run/react";
import { AnimatePresence, motion } from "framer-motion";
import SideBar from "~/components/SideBar";
import ReportHeader from "~/components/ReportHeader";
import Card from "~/components/Card";
import SideSheet from "~/components/SideSheet";
import AppBar from "~/components/AppBar";
import SidebarModal from "~/components/SidebarModal";
import { useReport } from "~/contexts/ReportContext";

const isReportRoute = (matches: ReturnType<typeof useMatches>): boolean => {
  return matches.some((match) => match.id.includes("routes/reports"));
};

export default function AppContent({
  children,
}: {
  children: React.ReactNode;
}) {
  const matches = useMatches();
  const { toggleSideSheet, openSideSheet } = useReport();
  const [isMobile, setIsMobile] = useState(
    typeof window !== "undefined" && window.innerWidth < 768
  );

  useEffect(() => {
    if (typeof window !== "undefined") {
      setIsMobile(window.innerWidth < 768);
      const handleResize = () => setIsMobile(window.innerWidth < 768);
      window.addEventListener("resize", handleResize);
      return () => window.removeEventListener("resize", handleResize);
    }
  }, []);

  return (
    <div className="w-full h-full flex flex-col py-2 px-0 sm:px-2.5 gap-2.5">
      {isReportRoute(matches) ? (
        <ReportHeader />
      ) : (
        <AppBar
          setSidesheet={toggleSideSheet}
        />
      )}
      <div className="flex-1 h-full flex gap-2 relative">
                      {/* Render SideBar always on desktop, only when SideSheet is open on mobile */}
        {(!isMobile || openSideSheet === "settings") && (
          <SideBar toggleSideSheet={toggleSideSheet} />
        )}
        <AnimatePresence mode="wait">
          <section className="flex-1 h-full grow flex flex-col gap-2">
            <motion.main
              className={`h-full relative w-full flex gap-4 p-2 px-1 sm:py-2 transition-all duration-500 ${
                openSideSheet === "settings" && isMobile ? "hidden" : ""
              }`}
              initial={{ opacity: 0, width: "100%" }}
              animate={{
                opacity: 1,
                //width:
                //openSideSheet === "settings" && !isMobile
                //</section>? `calc(100% - ${600 + (isMobile ? 0 : 256)}px)` // 600px SideSheet + 256px SideBar
                //: `calc(100% - ${isMobile ? 0 : 256}px)`, // 256px SideBar on desktop
              }}
              transition={{ duration: 0.3, ease: "easeOut" }}
            >
              <Card className="w-full ease-in-out transition-opacity duration-300 text-white">
                {children}
              </Card>
              {openSideSheet && (
                <SideSheet
                  id="settings"
                  isOpen={openSideSheet === "settings"}
                  setIsOpen={toggleSideSheet}
                  className="z-50"
                >
                  <div className="">
                    <p>Settings Panel Content</p>
                    <button className="mt-2 bg-blue-600 px-4 py-2 rounded">
                      Adjust Settings
                    </button>
                  </div>
                </SideSheet>
              )}
              <SidebarModal />
            </motion.main>
          </section>
        </AnimatePresence>
      </div>
    </div>
  );
}


<div className="flex flex-col gap-2.5 h-full pt-4 overflow-hidden relative">
      {/* Header Section */}
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="flex justify-between items-center"
      >
        <div className="flex items-center gap-4">
          <h1 className="text-2xl font-semibold text-gray-800 dark:text-neutral-200">
            All Reports
          </h1>
          {selectionMode && recents.length > 0 && (
            <span className="text-sm text-gray-600 dark:text-neutral-400">
              ({selectedRecents.length} selected)
            </span>
          )}
        </div>
        <motion.div className="flex gap-2">
          <button
            className="px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600"
            onClick={addRecent}
            aria-label="Add new report"
          >
            Add
          </button>
          <AnimatePresence mode="popLayout">
            {selectionMode && (
              <motion.div
                initial={{ opacity: 0, x: -10 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -10 }}
                transition={{ duration: 0.2, ease: "easeInOut" }}
                className="flex gap-2"
              >
                {recents.length > 0 && (
                  <button
                    className="px-2 py-1 bg-gray-500 text-white rounded hover:bg-gray-600"
                    onClick={clearAllRecents}
                    aria-label="Clear all reports"
                  >
                    Clear All
                  </button>
                )}
                <motion.button
                  initial={{ opacity: 0, x: -10 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -10 }}
                  transition={{ duration: 0.2, ease: "easeInOut" }}
                  className="px-2 py-1 bg-red-500 text-white rounded hover:bg-red-600 disabled:opacity-50"
                  onClick={removeRecent}
                  disabled={!selectedRecents.length}
                  aria-label="Remove selected reports"
                >
                  Remove Selected
                </motion.button>
              </motion.div>
            )}
          </AnimatePresence>
        </motion.div>
      </motion.div>

      {/* Reports List Section */}
      <div className="flex flex-col">
        <div className="flex w-full border-b border-gray-200 dark:border-neutral-700 py-2">
          {selectionMode && recents.length > 0 && (
            <div className="w-10 px-3">
              <input
                type="checkbox"
                checked={selectAll}
                onChange={toggleSelectAll}
                className="size-4 rounded border border-red-300 accent-purple-200"
                aria-label="Select all reports"
              />
            </div>
          )}
          <div className="flex-1 px-3 font-medium text-gray-600 dark:text-neutral-400">
            Name
          </div>
          <div className="flex-1 px-3 font-medium text-gray-600 dark:text-neutral-400">
            Shared
          </div>
          <div className="flex-1 px-3 font-medium text-gray-600 dark:text-neutral-400">
            Status
          </div>
          <div className="flex-1 px-3 font-medium text-gray-600 dark:text-neutral-400">
            Last Updated
          </div>
        </div>
        <motion.ul
          ref={listRef}
          variants={listVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"}
          className="py-2 mt-2 h-full overflow-y-auto"
          role="list"
          aria-label="List of reports"
        >
          <AnimatePresence mode="popLayout">
            {recents.length === 0 && (
              <motion.li
                key="empty"
                variants={itemVariants}
                initial="hidden"
                animate="visible"
                exit="exit"
                className="text-center font-semibold py-4"
              >
                There is nothing today.
              </motion.li>
            )}
            {[...recents].reverse().map((report) => (
              <motion.li
                key={report.id}
                variants={itemVariants}
                initial="hidden"
                animate="visible"
                exit="exit"
                className={`flex w-full text-sm py-3 px-3 last:border-0 border-b items-center hover:bg-gray-50 dark:hover:bg-neutral-700 relative ${
                  selectedRecents.includes(report)
                    ? "bg-blue-100 dark:bg-neutral-700 hover:bg-blue-200 hover:dark:bg-neutral-800 border-zinc-200 dark:border-neutral-600"
                    : "border-zinc-200 dark:border-zinc-700"
                }`}
                {...handlers({ id: report.id })}
                role="listitem"
                aria-label={`Report: ${report.name}`}
              >
                <AnimatePresence>
                  {selectionMode && selectedRecents.includes(report) && (
                    <div className="overflow-hidden absolute left-0 h-full w-3">
                      <motion.div
                        variants={indicatorVariants}
                        initial="initial"
                        animate="animate"
                        exit="exit"
                        transition={{ ease: "easeInOut", duration: 0.15 }}
                        className="h-full bg-purple-300 absolute left-0"
                      />
                    </div>
                  )}
                </AnimatePresence>
                {selectionMode && (
                  <div className="w-10 px-3">
                    <input
                      type="checkbox"
                      checked={selectedRecents.includes(report)}
                      onChange={() => selectRecent(report.id)}
                      className="size-4 rounded border-gray-300 accent-purple-200"
                      aria-label={`Select ${report.name}`}
                    />
                  </div>
                )}
                <Link
                  to={`/reports/${report.id}`}
                  className="flex w-full items-center focus:outline-none"
                  prefetch="intent"
                  aria-label={`View details for ${report.name}`}
                  onClick={(e) => {
                    if (selectionMode) {
                      e.preventDefault();
                      selectRecent(report.id);
                    }
                  }}
                >
                  <div
                    className={`flex-1 px-3 ${
                      selectedRecents.includes(report)
                        ? "text-gray-800 dark:text-white"
                        : "text-gray-800 dark:text-neutral-200"
                    }`}
                  >
                    {report.name}
                  </div>
                  <div
                    className="flex-1 px-3"
                    onClick={(e) => selectionMode && e.stopPropagation()}
                  >
                    <div className="flex -space-x-2">
                      {report.shared
                        .filter((item): item is SharedAvatar => "src" in item)
                        .map((item, index) => (
                          <img
                            key={index}
                            className="inline-block size-8 rounded-full ring-2 ring-white dark:ring-neutral-900"
                            src={item.src}
                            alt={
                              item.alt || `Avatar for shared user ${index + 1}`
                            }
                            aria-label={`Avatar for shared user ${index + 1}`}
                          />
                        ))}
                      {report.shared.some(
                        (item): item is SharedUser => "name" in item
                      ) && (
                        <Menu
                          as="div"
                          className="[--placement:top-left] outline-none border-none ring-0 relative inline-flex"
                          onClick={(e) => selectionMode && e.stopPropagation()}
                        >
                          <MenuButton
                            className="inline-flex items-center justify-center size-8 rounded-full bg-gray-100 border-2 border-white font-medium text-gray-700 shadow-2xs hover:bg-gray-200 focus:outline-none focus:bg-gray-300 text-sm dark:bg-neutral-700 dark:text-white dark:hover:bg-neutral-600 dark:focus:bg-neutral-600 dark:border-neutral-800"
                            aria-label={`Show ${
                              report.shared.filter(
                                (item): item is SharedUser => "name" in item
                              ).length
                            } more shared users`}
                          >
                            <span className="font-medium">
                              {
                                report.shared.filter(
                                  (item): item is SharedUser => "name" in item
                                ).length
                              }
                              +
                            </span>
                          </MenuButton>
                          <AnimatePresence>
                            <MenuItems
                              as={motion.div}
                              initial={{ opacity: 0, scale: 0.95 }}
                              animate={{ opacity: 1, scale: 1 }}
                              exit={{ opacity: 0, scale: 0.95 }}
                              className="w-48 z-10 mb-2 bg-white shadow-md rounded-lg p-2 dark:bg-neutral-800 dark:divide-neutral-700"
                              anchor="top start"
                            >
                              {report.shared
                                .filter(
                                  (item): item is SharedUser => "name" in item
                                )
                                .map((item, index) => (
                                  <MenuItem key={index}>
                                    <a
                                      className="flex items-center gap-x-3.5 py-2 px-3 rounded-lg text-sm text-gray-800 hover:bg-gray-100 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 data-[focus]:bg-gray-100 dark:data-[focus]:bg-neutral-700"
                                      href={item.href}
                                      onClick={(e) => e.stopPropagation()}
                                      aria-label={`Profile for ${item.name}`}
                                    >
                                      {item.name}
                                    </a>
                                  </MenuItem>
                                ))}
                            </MenuItems>
                          </AnimatePresence>
                        </Menu>
                      )}
                    </div>
                  </div>
                  <div
                    className={`flex-1 px-3 ${
                      selectedRecents.includes(report)
                        ? "text-gray-800 dark:text-white"
                        : "text-gray-600 dark:text-neutral-400"
                    }`}
                  >
                    {report.status}
                  </div>
                  <div
                    className={`flex-1 px-3 ${
                      selectedRecents.includes(report)
                        ? "text-gray-800 dark:text-white"
                        : "text-gray-600 dark:text-neutral-400"
                    }`}
                  >
                    {format(new Date(report.lastUpdated), "MMMM d, yyyy")}
                  </div>
                </Link>
                <div className="flex-1 px-3 absolute right-0">
                  <AnimatePresence>
                    {selectionMode &&
                      selectedRecents.includes(report) &&
                      selectedRecents.length === 1 && (
                        <motion.button
                          variants={trashBinVariants}
                          initial="initial"
                          animate="animate"
                          exit="exit"
                          transition={{ duration: 0.2, ease: "easeInOut" }}
                          onClick={(e) => {
                            e.stopPropagation();
                            setRecents((prev) =>
                              prev.filter((r) => r.id !== report.id)
                            );
                            setSelectedRecents((prev) =>
                              prev.filter((r) => r.id !== report.id)
                            );
                            setSelectAll(false);
                            setSelectionMode(false);
                          }}
                          className="rounded bg-red-300/20 px-1.5 py-2 text-xs text-red-300 transition-colors hover:bg-red-600 hover:text-red-200"
                          aria-label={`Delete ${report.name}`}
                        >
                          <FiTrash2 size={20} />
                        </motion.button>
                      )}
                  </AnimatePresence>
                </div>
              </motion.li>
            ))}
          </AnimatePresence>
        </motion.ul>
      </div>
    </div>
